{"version":3,"sources":["app.js","controllers.js","directives.js","services.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["'use strict';\n\n/* App Module */\n\nvar gaChallengeApp = angular.module('gaChallengeApp', [\n    'ngRoute',\n    'gaControllers',\n    'gaServices',\n    'gaDirectives'\n]);\n\n// routes\ngaChallengeApp.config(['$routeProvider',\n    function ($routeProvider) {\n        $routeProvider.\n        when('/', {\n            templateUrl: 'views/partials/main.html',\n            controller: 'CountryDetailController'\n        }).\n        when('/countries', {\n            templateUrl: 'views/partials/country-list.html',\n            controller: 'CountryListController'\n        }).\n        otherwise({\n            redirectTo: '/'\n        });\n}]);\n\ngaChallengeApp.config(['$httpProvider',\n    function ($httpProvider) {\n        $httpProvider.interceptors.push('HttpRequestInterceptor');\n}]);\n","'use strict';\n\n/* Controllers */\n\nvar gaControllers = angular.module('gaControllers', []);\n\n// main page\ngaControllers.controller('CountryDetailController', ['$scope', '$location', 'CountryRestClient', 'PhonenumberRestClient',\n    function ($scope, $location, CountryRestClient, PhonenumberRestClient) {\n        CountryRestClient.get({key: 'current'}, function (country) {\n            $scope.country = country;\n            $scope.showPurchasingForm = false;\n            $scope.currentNumber = null;\n\n            PhonenumberRestClient.get(\n                {country: country.iso, current: 'current'},\n                function (phonenumber) {\n                    $scope.currentNumber = phonenumber.number;\n                    $scope.showPurchasingForm = false;\n                },\n                function (response) {\n                    $scope.showPurchasingForm = true;\n\n                    $scope.phonenumber = {\n                        value: null,\n                        options: null\n                    };\n\n                    // buy a number\n                    $scope.submit = function() {\n                        PhonenumberRestClient.save(\n                            {country: '', phonenumber: $scope.phonenumber.value},\n                            function (phonenumber) {\n                                $scope.showPurchasingForm = false;\n                                $scope.currentNumber = phonenumber.number;\n                                $scope.errors = null;\n                            }, function (response) {\n                                $scope.showPurchasingForm = true;\n                                $scope.errors = response.data.errors;\n                        });\n                    };\n                });\n        }, function (response) {\n            $location.path('/countries');\n        });\n}]);\n\n\n// list of countries\ngaControllers.controller('CountryListController', ['$scope', 'CountryRestClient',\n    function ($scope, CountryRestClient) {\n        CountryRestClient.query(function (list) {\n            $scope.list = list;\n            $scope.errors = null;\n        }, function (response) {\n            $scope.errors = response.data.errors;\n        });\n}]);\n\n\n// save country\ngaControllers.controller('CountryKeepController', ['$scope', '$location', 'CountryRestClient',\n    function ($scope, $location, CountryRestClient) {\n        $scope.submit = function() {\n            CountryRestClient.save($scope.$parent.country, function () {\n                $scope.errors = null;\n                $location.path('/');\n            }, function (response) {\n                $scope.errors = response.data.errors;\n            });\n        };\n}]);\n","'use strict';\n\n/* Controllers */\n\nvar gaDirectives = angular.module('gaDirectives', []);\n\ngaDirectives.directive('gaPhonenumbersOptions', ['PhonenumberRestClient', function (PhonenumberRestClient) {\n    return {\n        restrict: 'EA',\n        require: 'ngModel',\n        scope: {\n            options: '='\n        },\n        link: function (scope, element, $attrs, $ngModel) {\n            // Ajax loading notification\n            scope.options = [\"Loading...\"];\n\n            // Control var to prevent infinite loop\n            scope.loaded = false;\n\n            element.bind('mousedown', function() {\n                if (!scope.loaded) {\n                    PhonenumberRestClient.query({\n                        country: scope.$parent.country.iso\n                    }, function (list) {\n                        scope.options = list;\n                        scope.loaded = true;\n                    }, function (response) {\n                        console.error(response.data.errors);\n                    });\n                }\n            });\n        }\n    }\n}]);\n","'use strict';\n\n/* Services */\n\nvar gaServices = angular.module('gaServices', ['ngResource']);\n\n// rest manager for countries route set\ngaServices.factory('CountryRestClient', ['$resource',\n    function ($resource) {\n        return $resource('api/countries/:key', {key: ''});\n}]);\n\n// rest manager for phonenumbers route set\ngaServices.factory('PhonenumberRestClient', ['$resource',\n    function ($resource) {\n        return $resource(\n            'api/phonenumbers/:country/:current',\n            {\n                current: ''\n            }\n        );\n}]);\n\ngaServices.factory('HttpRequestInterceptor', function () {\n    return {\n        request: function (config) {\n            // set csrf token\n            config.headers['X-CSRF-TOKEN'] = $('meta[name=\"csrf-token\"]').attr('content');\n            return config;\n        }\n    };\n});\n"],"sourceRoot":"/source/"}